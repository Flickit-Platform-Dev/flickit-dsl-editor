name: CI/CD Pipeline

on:
  push:
    branches:
      - 'main'
    tags:
      - 'v**'
  pull_request:
    branches:
      - '*'

env:
  SONAR_PROJECT_KEY: flickit-dsl-editor
  MAVEN_USERNAME: avansoft

jobs:
  build:
    runs-on: ubuntu-latest
    if: ${{ (github.event_name == 'push' && github.ref == 'refs/heads/main') ||
      (github.event_name == 'pull_request' && github.ref_type == 'branch') }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: adopt

      - name: Build with Maven
        run: mvn clean package

  sonar:
    needs: [build]
    runs-on: ubuntu-latest
    if: ${{ (github.event_name == 'push' && github.ref == 'refs/heads/main') ||
      (github.event_name == 'pull_request' && github.ref_type == 'branch') }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: adopt

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PACKAGES_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=${{ env.SONAR_PROJECT_KEY }}

  deploy-snapshot-package:
    needs: [sonar]
    name: deploy snapshot package
    runs-on: ubuntu-latest
    if: ${{ (github.event_name == 'push' && github.ref == 'refs/heads/main') ||
      (github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true) }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: adopt

      - name: Build with Maven
        run: mvn clean package
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PACKAGES_TOKEN }}
          MAVEN_USERNAME: ${{ env.MAVEN_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.GH_PACKAGES_TOKEN }}

      - name: Deploy to GitHub Packages
        run: mvn deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PACKAGES_TOKEN }}
          MAVEN_USERNAME: ${{ env.MAVEN_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.GH_PACKAGES_TOKEN }}

  build-deploy-package:
    name: deploy package
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: adopt

      - name: Build with Maven
        run: mvn clean package
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PACKAGES_TOKEN }}
          MAVEN_USERNAME: ${{ env.MAVEN_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.GH_PACKAGES_TOKEN }}

      - name: Deploy to GitHub Packages
        run: mvn deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PACKAGES_TOKEN }}
          MAVEN_USERNAME: ${{ env.MAVEN_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.GH_PACKAGES_TOKEN }}
