grammar org.flickit.dsl.editor.Profile with org.eclipse.xtext.common.Terminals

generate profile "http://www.flickit.org/dsl/editor/Profile"

AssessmentProfile:
	includes+=Include*
    (elements+=BaseInfo)*;
    
Include:
	'import' importURI=STRING;
 
BaseInfo:
    Profile | Subject | Questionnaire | QualityAttribute | Metric;
	
Profile:
    'Profile' name=ID;

Subject:
    'Subject' name=ID '{'
    ('code:' code=STRING)
    ('title:' title=STRING)
    ('description:' description=STRING)
    ('index:' index=INT)?
    ('questionnaires:' questionnaires+=[Questionnaire] (',' questionnaires+=[Questionnaire])*)?
    '}';

Questionnaire:
    'Questionnaire' name=ID '{'
    ('code:' code=STRING)
    ('title:' title=STRING)
    ('description:' description=STRING)
    ('index:' index=INT)?
    '}';

QualityAttribute:
    'QualityAttribute' name=ID '{'
    ('code:' code=STRING)
    ('title:' title=STRING)
    ('description:' description=STRING)
    ('index:' index=INT)?
    'subject:' subject=[Subject]
    '}';
    
    
   
Level:
    'WEAK' | 'RISKY' | 'NORMAL' | 'GOOD' | 'OPTIMIZED';
    

AffectsLevel:
    'affects' level=Level 'level' 'of' qualityAttribute+=[QualityAttribute] ('with' 'values' '{' values+=FLOAT (',' values+=FLOAT)* '}')?;
    

FLOAT:
	INT '.' INT;

Metric:
    'Metric' name=ID '{'
    'questionnaire:' questionnaire=[Questionnaire]
    ('description:' description=STRING)?
    'question:' question=STRING
    'options:' options+=STRING (',' options+=STRING)*
    (affects+=AffectsLevel)*
    ('options' optionFrom=INT 'to' optionTo=INT 'affects' 'on' level=Level 'level' 'of' qualityAttribute+=[QualityAttribute] ('with values' '{' values+=FLOAT (',' values+=FLOAT)* '}')*)*
    ('option' INT 'is necessary for'  level=Level 'level' 'of' qualityAttribute+=[QualityAttribute])*
    '}';
